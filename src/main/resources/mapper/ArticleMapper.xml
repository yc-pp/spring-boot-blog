<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.base.dao.ArticleMapper">
  <resultMap id="BaseResultMap" type="com.blog.base.entity.Article">
    <id column="oId" jdbcType="BIGINT" property="oid" />
    <result column="articleTitle" jdbcType="VARCHAR" property="articletitle" />
    <result column="articleImgURL" jdbcType="VARCHAR" property="articleimgurl" />
    <result column="articleCategoryId" jdbcType="INTEGER" property="articlecategoryid" />
    <result column="articleCategoryName" jdbcType="VARCHAR" property="articlecategoryname" />
    <result column="articleTags" jdbcType="VARCHAR" property="articletags" />
    <result column="articleAuthorId" jdbcType="BIGINT" property="articleauthorid" />
    <result column="articleStatus" jdbcType="TINYINT" property="articlestatus" />
    <result column="articleViewCount" jdbcType="BIGINT" property="articleviewcount" />
    <result column="articleCommentable" jdbcType="TINYINT" property="articlecommentable" />
    <result column="articlePermalink" jdbcType="VARCHAR" property="articlepermalink" />
    <result column="articleCommentCount" jdbcType="BIGINT" property="articlecommentcount" />
    <result column="articleCreated" jdbcType="TIMESTAMP" property="articlecreated" />
    <result column="articleUpdated" jdbcType="TIMESTAMP" property="articleupdated" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.blog.base.entity.Article">
    <result column="articleContent" jdbcType="LONGVARCHAR" property="articlecontent" />
  </resultMap>
  <sql id="Base_Column_List">
    oId, articleTitle, articleImgURL, articleCategoryId, articleCategoryName, articleTags, 
    articleAuthorId, articleStatus, articleViewCount, articleCommentable, articlePermalink, 
    articleCommentCount, articleCreated, articleUpdated
  </sql>
  <sql id="Blob_Column_List">
    articleContent
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from yc_article
    where oId = #{oid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from yc_article
    where oId = #{oid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.blog.base.entity.Article">
    <selectKey keyProperty="oid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yc_article (articleTitle, articleImgURL, articleCategoryId, 
      articleCategoryName, articleTags, articleAuthorId, 
      articleStatus, articleViewCount, articleCommentable, 
      articlePermalink, articleCommentCount, articleCreated, 
      articleUpdated, articleContent)
    values (#{articletitle,jdbcType=VARCHAR}, #{articleimgurl,jdbcType=VARCHAR}, #{articlecategoryid,jdbcType=INTEGER}, 
      #{articlecategoryname,jdbcType=VARCHAR}, #{articletags,jdbcType=VARCHAR}, #{articleauthorid,jdbcType=BIGINT}, 
      #{articlestatus,jdbcType=TINYINT}, #{articleviewcount,jdbcType=BIGINT}, #{articlecommentable,jdbcType=TINYINT}, 
      #{articlepermalink,jdbcType=VARCHAR}, #{articlecommentcount,jdbcType=BIGINT}, #{articlecreated,jdbcType=TIMESTAMP}, 
      #{articleupdated,jdbcType=TIMESTAMP}, #{articlecontent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blog.base.entity.Article">
    <selectKey keyProperty="oid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into yc_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articletitle != null">
        articleTitle,
      </if>
      <if test="articleimgurl != null">
        articleImgURL,
      </if>
      <if test="articlecategoryid != null">
        articleCategoryId,
      </if>
      <if test="articlecategoryname != null">
        articleCategoryName,
      </if>
      <if test="articletags != null">
        articleTags,
      </if>
      <if test="articleauthorid != null">
        articleAuthorId,
      </if>
      <if test="articlestatus != null">
        articleStatus,
      </if>
      <if test="articleviewcount != null">
        articleViewCount,
      </if>
      <if test="articlecommentable != null">
        articleCommentable,
      </if>
      <if test="articlepermalink != null">
        articlePermalink,
      </if>
      <if test="articlecommentcount != null">
        articleCommentCount,
      </if>
      <if test="articlecreated != null">
        articleCreated,
      </if>
      <if test="articleupdated != null">
        articleUpdated,
      </if>
      <if test="articlecontent != null">
        articleContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articletitle != null">
        #{articletitle,jdbcType=VARCHAR},
      </if>
      <if test="articleimgurl != null">
        #{articleimgurl,jdbcType=VARCHAR},
      </if>
      <if test="articlecategoryid != null">
        #{articlecategoryid,jdbcType=INTEGER},
      </if>
      <if test="articlecategoryname != null">
        #{articlecategoryname,jdbcType=VARCHAR},
      </if>
      <if test="articletags != null">
        #{articletags,jdbcType=VARCHAR},
      </if>
      <if test="articleauthorid != null">
        #{articleauthorid,jdbcType=BIGINT},
      </if>
      <if test="articlestatus != null">
        #{articlestatus,jdbcType=TINYINT},
      </if>
      <if test="articleviewcount != null">
        #{articleviewcount,jdbcType=BIGINT},
      </if>
      <if test="articlecommentable != null">
        #{articlecommentable,jdbcType=TINYINT},
      </if>
      <if test="articlepermalink != null">
        #{articlepermalink,jdbcType=VARCHAR},
      </if>
      <if test="articlecommentcount != null">
        #{articlecommentcount,jdbcType=BIGINT},
      </if>
      <if test="articlecreated != null">
        #{articlecreated,jdbcType=TIMESTAMP},
      </if>
      <if test="articleupdated != null">
        #{articleupdated,jdbcType=TIMESTAMP},
      </if>
      <if test="articlecontent != null">
        #{articlecontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blog.base.entity.Article">
    update yc_article
    <set>
      <if test="articletitle != null">
        articleTitle = #{articletitle,jdbcType=VARCHAR},
      </if>
      <if test="articleimgurl != null">
        articleImgURL = #{articleimgurl,jdbcType=VARCHAR},
      </if>
      <if test="articlecategoryid != null">
        articleCategoryId = #{articlecategoryid,jdbcType=INTEGER},
      </if>
      <if test="articlecategoryname != null">
        articleCategoryName = #{articlecategoryname,jdbcType=VARCHAR},
      </if>
      <if test="articletags != null">
        articleTags = #{articletags,jdbcType=VARCHAR},
      </if>
      <if test="articleauthorid != null">
        articleAuthorId = #{articleauthorid,jdbcType=BIGINT},
      </if>
      <if test="articlestatus != null">
        articleStatus = #{articlestatus,jdbcType=TINYINT},
      </if>
      <if test="articleviewcount != null">
        articleViewCount = #{articleviewcount,jdbcType=BIGINT},
      </if>
      <if test="articlecommentable != null">
        articleCommentable = #{articlecommentable,jdbcType=TINYINT},
      </if>
      <if test="articlepermalink != null">
        articlePermalink = #{articlepermalink,jdbcType=VARCHAR},
      </if>
      <if test="articlecommentcount != null">
        articleCommentCount = #{articlecommentcount,jdbcType=BIGINT},
      </if>
      <if test="articlecreated != null">
        articleCreated = #{articlecreated,jdbcType=TIMESTAMP},
      </if>
      <if test="articleupdated != null">
        articleUpdated = #{articleupdated,jdbcType=TIMESTAMP},
      </if>
      <if test="articlecontent != null">
        articleContent = #{articlecontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where oId = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blog.base.entity.Article">
    update yc_article
    set articleTitle = #{articletitle,jdbcType=VARCHAR},
      articleImgURL = #{articleimgurl,jdbcType=VARCHAR},
      articleCategoryId = #{articlecategoryid,jdbcType=INTEGER},
      articleCategoryName = #{articlecategoryname,jdbcType=VARCHAR},
      articleTags = #{articletags,jdbcType=VARCHAR},
      articleAuthorId = #{articleauthorid,jdbcType=BIGINT},
      articleStatus = #{articlestatus,jdbcType=TINYINT},
      articleViewCount = #{articleviewcount,jdbcType=BIGINT},
      articleCommentable = #{articlecommentable,jdbcType=TINYINT},
      articlePermalink = #{articlepermalink,jdbcType=VARCHAR},
      articleCommentCount = #{articlecommentcount,jdbcType=BIGINT},
      articleCreated = #{articlecreated,jdbcType=TIMESTAMP},
      articleUpdated = #{articleupdated,jdbcType=TIMESTAMP}
    where oId = #{oid,jdbcType=BIGINT}
  </update>
  <select id="findArticleList" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>,
    <include refid="Blob_Column_List" />
    from yc_article where 1=1
    <if test="keyword!=null">
      AND (articleTitle like CONCAT('%','${keyword}','%' ) or articleCategoryName like CONCAT('%','${keyword}','%' ))
    </if>
    <if test="blogStatus!=null">
      AND articleStatus = #{blogStatus}
    </if>
    <if test="blogCategoryId!=null">
      AND articleCategoryId = #{blogCategoryId}
    </if>
    order by oId desc
    <if test="start!=null and limit!=null">
      limit #{start},#{limit}
    </if>
  </select>
  <select id="getTotalArticles" parameterType="Map" resultType="int">
    select count(*)  from yc_article where 1=1
    <if test="keyword!=null">
      AND (articleTitle like CONCAT('%','${keyword}','%' ) or articleCategoryName like CONCAT('%','${keyword}','%' ))
    </if>
    <if test="blogStatus!=null">
      AND articleStatus = #{blogStatus}
    </if>
    <if test="blogCategoryId!=null">
      AND articleCategoryId = #{blogCategoryId}
    </if>
  </select>
  <select id="findArticleListByType" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"></include> from yc_article where articleStatus='1'
    <if test="type !=null and type==0">
        order by articleViewCount desc
    </if>
    <if test="type != null and type==1">
        order by  oId desc
    </if>
    limit #{limit}
  </select>
  <select id="getArticlesByTagTitle" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>,
    <include refid="Blob_Column_List" />
    from yc_article where articleStatus='1' and oid in (select article_oId from yc_tag_article where tag_oId =#{tagOid})
    limit #{start},#{limit}
  </select>
  <select id="getTotalArtitlesByTagTitle" parameterType="Map" resultType="int">
    select count(*)
    from yc_article where articleStatus='1' and oid in (select article_oId from yc_tag_article where tag_oId =#{tagOid})
  </select>
</mapper>